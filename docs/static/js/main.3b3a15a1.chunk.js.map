{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","d","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","img","key","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,OAOd,2BACGO,KAAK,OACLC,MAAUT,EACVU,SAjBc,SAAEP,GAAF,OAASF,EAAeE,EAAEQ,OAAOF,Y,uBCL9CG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,8DAEII,MAAQF,GAFZ,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QATrB,kBAaZM,GAbY,4CAAH,sDCAXO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAON,IACxB,+BAAMA,EAAN,OCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAkBvC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAAI,OACPH,EAAU,CACNf,KAAMkB,EACNL,SAAQ,SAGrB,CAAEpB,IAEEqB,EDf0BK,CAAa1B,GAAhCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,gCAAOpB,GAELoB,GAAW,0CAEb,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,kBAAC,EAAD,eACIC,IAAMD,EAAIhB,IACLgB,UEfpBE,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,aAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,yBAAM+B,UAAU,uDAERc,EAAWrB,KAAK,SAAAsB,GAAC,OACb,kBAAC,EAAD,CACIH,IAAQG,EACR/B,SAAa+B,U,MCZzCC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.3b3a15a1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => setInputValue( e.target.value );\r\n\r\n    const handleSubmit = ( e ) => { \r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ]);\r\n            setInputValue( '' );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n             <input \r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n    export const getGifs = async ( category ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=5&api_key=9MOAWy0rMRZaY9jtq1SGd5J0ZwuODCSl`;\r\n        const response = await fetch ( url );\r\n        const { data } = await response.json();\r\n\r\n        const gifs = data.map( d => {\r\n            return {\r\n                id: d.id,\r\n                title: d.title,\r\n                url: d.images?.downsized_medium.url\r\n            }\r\n        })\r\n        \r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n    \r\n    // console.log({ id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading} = useFetchGif( category );\r\n\r\n    return (\r\n        <>\r\n            <h4> { category }</h4>\r\n            \r\n            { loading && <p>Cargando...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs =>\r\n                setState( {\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n                )\r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Simpsons'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr/>\r\n            <div  className=\"animate__animated animate__fadeIn animate__delay-2s\">\r\n                { \r\n                    categories.map( c => \r\n                        <GifGrid \r\n                            key = { c }\r\n                            category = { c }/>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}